{"version":3,"sources":["utils.js","config.js","ERC721.js","Query.js","Benchmark.js","App.js","serviceWorker.js","index.js"],"names":["resolveWeb3","resolve","localProvider","authentication","web3","window","ethereum","Web3","enable","then","err","console","log","currentProvider","Error","concat","hasMethod","_x","_x2","_x3","_hasMethod","apply","this","arguments","_callee","address","signature","code","hash","regenerator_default","a","wrap","_context","prev","next","eth","getCode","sent","abi","encodeFunctionSignature","abrupt","indexOf","slice","length","stop","config","ERC721","Object","classCallCheck","contract","Contract","NFT","methods","name","call","owner","_this","wrapAsyncGenerator","mark","_callee3","outputs","inputs","i","outputTokenId","j","inputTokenId","_i","_context3","awaitAsyncGenerator","getPastEvents","fromBlock","toBlock","topics","sha3","padLeft","returnValues","tokenId","splice","_this2","_callee4","n","_context4","balanceOf","tokenOfOwnerByIndex","_this3","_callee5","promises","_loop","_ref","_ref2","v","_context5","isEnumerable","Promise","reject","r","values","race","slicedToArray","_this4","_callee6","batch","_loop2","_ref3","_ref4","_context6","BatchRequest","add","request","from","b","execute","Query","props","possibleConstructorReturn","getPrototypeOf","state","fetching","startTime","stopTime","tokens","clearInterval","intervalId","prevProps","setState","strategy","disabled","erc721","Date","setInterval","iterator","value","done","push","error","t0","toString","split","_this$state","_this$props2","react_default","createElement","className","join","onClick","fetchTokens","bind","Component","Benchmark","event","preventDefault","balance","target","onSubmit","handleSubmit","onChange","e","size","type","href","Query_Query","App","Benchmark_Benchmark","Boolean","location","hostname","match","addEventListener","document","readyState","getWeb3","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8abbff40.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nconst ERRORS = [\n  \"Error: ERROR: The returned value is not a convertible string:\",\n  \"Error: Couldn't decode uint256 from ABI: 0x\"\n];\n\nfunction resolveWeb3(resolve, localProvider, authentication) {\n  let web3;\n\n  if (window.ethereum) {\n    web3 = new Web3(window.ethereum);\n    if (authentication === true) {\n      try {\n        window.ethereum.enable().then(() => resolve(web3));\n      } catch (err) {\n        console.log(err);\n      }\n    } else {\n      resolve(web3);\n    }\n  } else if (window.web3) {\n    web3 = new Web3(window.web3.currentProvider);\n    resolve(web3);\n  } else {\n    if (authentication === true) {\n      throw new Error(\n        \"Non-Ethereum browser detected. Cannot work in authenticated mode\"\n      );\n    }\n    web3 = new Web3(localProvider);\n    console.log(`Non-Ethereum browser detected. Using ${localProvider}.`);\n    resolve(web3);\n  }\n}\n\nfunction getWeb3(localProvider, authentication) {\n  localProvider = localProvider || \"https://mainnet.infura.io/\";\n\n  return new Promise(resolve => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", () => {\n      resolveWeb3(resolve, localProvider, authentication);\n    });\n    // If document has loaded already, try to get Web3 immediately.\n    if (document.readyState === \"complete\") {\n      resolveWeb3(resolve, localProvider, authentication);\n    }\n  });\n}\n\nexport function loadWeb3(localProvider) {\n  return getWeb3(localProvider, false);\n}\n\n// From: https://ethereum.stackexchange.com/a/50091/33448\nexport async function hasMethod(web3, address, signature) {\n  const code = await web3.eth.getCode(address);\n  const hash = web3.eth.abi.encodeFunctionSignature(signature);\n  return code.indexOf(hash.slice(2, hash.length)) > 0;\n}\n","export default {\n  web3: null\n};\n","import { sha3, padLeft } from \"web3-utils\";\n\nimport { hasMethod } from \"./utils\";\nimport config from \"./config\";\nimport NFT from \"./static/abis/NFT.json\";\n\nexport default class ERC721 {\n  constructor(address) {\n    this.web3 = config.web3;\n    this.address = address;\n    this.contract = new this.web3.eth.Contract(NFT, address);\n  }\n\n  async isEnumerable() {\n    return await hasMethod(\n      this.web3,\n      this.address,\n      \"tokenOfOwnerByIndex(address,uint256)\"\n    );\n  }\n\n  async name() {\n    return await this.contract.methods.name().call();\n  }\n\n  // Inspired by:\n  // https://github.com/TimDaub/ERC721-wallet/blob/master/src/sagas/fetchTransactions.js\n  async *tokensViaEvents(owner) {\n    const outputs = await this.contract.getPastEvents(\"Transfer\", {\n      fromBlock: 0,\n      toBlock: \"latest\",\n      topics: [\n        sha3(\"Transfer(address,address,uint256)\"),\n        padLeft(owner, 64),\n        null\n      ]\n    });\n\n    const inputs = await this.contract.getPastEvents(\"Transfer\", {\n      fromBlock: 0,\n      toBlock: \"latest\",\n      topics: [\n        sha3(\"Transfer(address,address,uint256)\"),\n        null,\n        padLeft(owner, 64)\n      ]\n    });\n\n    for (let i = 0; i < outputs.length; i++) {\n      const outputTokenId = outputs[i].returnValues.tokenId;\n      for (let j = 0; j < inputs.length; j++) {\n        const inputTokenId = inputs[j].returnValues.tokenId;\n        if (outputTokenId === inputTokenId) {\n          inputs.splice(j, 1);\n        }\n      }\n    }\n    for (let i = 0; i < inputs.length; i++) {\n      yield inputs[i].returnValues.tokenId;\n    }\n  }\n\n  async *tokensViaEnumSync(owner) {\n    const n = await this.balanceOf(owner);\n    for (let i = 0; i < n; i++) {\n      yield await this.contract.methods.tokenOfOwnerByIndex(owner, i).call();\n    }\n  }\n\n  async *tokensViaEnum(owner) {\n    if (!(await this.isEnumerable())) {\n      throw new Error(\"contract does't implement ERC721Enumerable\");\n    }\n    const { web3 } = config;\n    const n = await this.balanceOf(owner);\n\n    let promises = {};\n\n    for (let i = 0; i < n; i++) {\n      promises[i] = new Promise((resolve, reject) =>\n        this.contract.methods\n          .tokenOfOwnerByIndex(owner, i)\n          .call()\n          .then(r => resolve([i, r]))\n      );\n    }\n    while (Object.values(promises).length) {\n      let [i, v] = await Promise.race(Object.values(promises));\n      delete promises[i];\n      yield v;\n    }\n  }\n\n  async *tokensViaEnumBatch(owner) {\n    if (!(await this.isEnumerable())) {\n      throw new Error(\"contract does't implement ERC721Enumerable\");\n    }\n    const { web3 } = config;\n    const n = await this.balanceOf(owner);\n\n    let promises = {};\n    const batch = new web3.BatchRequest();\n\n    for (let i = 0; i < n; i++) {\n      promises[i] = new Promise((resolve, reject) =>\n        batch.add(\n          this.contract.methods\n            .tokenOfOwnerByIndex(owner, i)\n            .call.request({ from: owner }, (a, b) => resolve([i, b]))\n        )\n      );\n    }\n    batch.execute();\n    while (Object.values(promises).length) {\n      let [i, v] = await Promise.race(Object.values(promises));\n      delete promises[i];\n      yield v;\n    }\n  }\n\n  async balanceOf(owner) {\n    return await this.contract.methods.balanceOf(owner).call();\n  }\n}\n","import React, { Component } from \"react\";\n\nimport ERC721 from \"./ERC721\";\n\nexport default class Query extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fetching: false,\n      startTime: 0,\n      stopTime: 0,\n      tokens: []\n    };\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.contract !== prevProps.contract ||\n      this.props.owner !== prevProps.owner\n    ) {\n      console.log(\"clear interval\");\n      this.setState({\n        fetching: false,\n        startTime: 0,\n        stopTime: 0,\n        tokens: []\n      });\n      clearInterval(this.intervalId);\n    }\n  }\n\n  async fetchTokens() {\n    const { strategy, contract, owner, disabled } = this.props;\n\n    const erc721 = new ERC721(contract);\n\n    this.setState({\n      fetching: true,\n      startTime: new Date(),\n      stopTime: new Date(),\n      tokens: []\n    });\n\n    this.intervalId = setInterval(\n      () => this.setState({ stopTime: new Date() }),\n      1000\n    );\n\n    let tokens = [];\n    let iterator = erc721[strategy](owner);\n    while (true) {\n      try {\n        let { value, done } = await iterator.next();\n        if (done) break;\n        tokens.push(value);\n      } catch (error) {\n        this.setState({ error: error.toString().split(\"\\n\")[0] });\n        return;\n      }\n      this.setState({ tokens });\n    }\n    clearInterval(this.intervalId);\n    this.setState({\n      tokens,\n      fetching: false,\n      stopTime: new Date()\n    });\n  }\n\n  render() {\n    const { error, tokens, startTime, stopTime, fetching } = this.state;\n    const { strategy, disabled } = this.props;\n    return (\n      <div className=\"Query\">\n        <h3>\n          Fetch strategy: <code>{strategy}</code>\n        </h3>\n        <div>\n          Found {tokens.length} tokens: {tokens.join(\", \")}\n        </div>\n        {error ? (\n          <div>{error}</div>\n        ) : (\n          <div>\n            <div>Elapsed Time (s): {(stopTime - startTime) / 1000}</div>\n            <button onClick={this.fetchTokens.bind(this)} disabled={disabled}>\n              Fetch\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./static/styles/Benchmark.css\";\n\nimport { tryCall } from \"./utils\";\nimport ERC721 from \"./ERC721\";\nimport config from \"./config\";\nimport Query from \"./Query\";\n\nexport default class Benchmark extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contract: \"0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab\",\n      owner: \"0x4eb5c09f266a6681f3a7729cd4587cbb1ae3d41e\"\n    };\n  }\n  async handleSubmit(event) {\n    event.preventDefault();\n    const { web3 } = config;\n\n    this.setState({\n      fetching: true,\n      balance: null,\n      name: null\n    });\n\n    const contract = event.target.contract.value;\n    const owner = event.target.owner.value;\n    const erc721 = new ERC721(contract);\n    this.setState({\n      balance: (await erc721.balanceOf(owner)).toString(10),\n      name: await erc721.name(),\n      fetching: false\n    });\n  }\n\n  render() {\n    const { balance, name, fetching, contract, owner } = this.state || {};\n    return (\n      <div className=\"Benchmark\">\n        <h1>Step 1: Load a Smart Contract</h1>\n        Select one example from below:\n        <ul>\n          <li\n            onClick={() =>\n              this.setState({\n                contract: \"0x6EbeAf8e8E946F0716E6533A6f2cefc83f60e8Ab\",\n                owner: \"0x4eb5c09f266a6681f3a7729cd4587cbb1ae3d41e\"\n              })\n            }\n          >\n            Gods Unchained\n          </li>\n          <li\n            onClick={() =>\n              this.setState({\n                contract: \"0x8bc67d00253fd60b1afcce88b78820413139f4c6\",\n                owner: \"0xfc7a64183f49f71a1d604496e62c08f20af5b5d6\"\n              })\n            }\n          >\n            CryptoFlowers\n          </li>\n          <li\n            onClick={() =>\n              this.setState({\n                contract: \"0xBd13e53255eF917DA7557db1B7D2d5C38a2EFe24\",\n                owner: \"0xf862c9413f2cc21ebfda534ecfa6df4f59f0b197\"\n              })\n            }\n          >\n            DozerDoll\n          </li>\n          <li\n            onClick={() =>\n              this.setState({\n                contract: \"0x06012c8cf97bead5deae237070f9587f8e7a266d\",\n                owner: \"0x491fd53e5e0d8b4a5f28d008856060cda5380aaf\"\n              })\n            }\n          >\n            CryptoKitties (doesn't work, requires a dedicated API call)\n          </li>\n        </ul>\n        Or insert your own custom addresses:\n        <form onSubmit={this.handleSubmit.bind(this)}>\n          <div>\n            Contract address:{\" \"}\n            <input\n              name=\"contract\"\n              value={contract}\n              onChange={e => this.setState({ contract: e.target.value })}\n              size=\"40\"\n            />\n          </div>\n          <div>\n            Owner address:{\" \"}\n            <input\n              name=\"owner\"\n              value={owner}\n              onChange={e => this.setState({ owner: e.target.value })}\n              size=\"40\"\n            />\n          </div>\n          <input type=\"submit\" disabled={fetching} />\n        </form>\n        <div>\n          <h3>Metadata</h3>\n          <div>Name: {name}</div>\n          <div>Balance: {balance}</div>\n          <h1>Step 2: Test strategies</h1>\n          <p>\n            <em>\n              Note: if you are aware of any caching mechanism that can\n              invalidate those results please tell me.\n            </em>\n          </p>\n          <p>\n            Check the{\" \"}\n            <a href=\"https://github.com/vrde/erc721-benchmark/blob/master/src/ERC721.js\">\n              source code\n            </a>{\" \"}\n            of the different functions.\n          </p>\n          <Query\n            strategy={\"tokensViaEvents\"}\n            contract={contract}\n            owner={owner}\n            disabled={!balance}\n          />\n          <Query\n            strategy={\"tokensViaEnum\"}\n            contract={contract}\n            owner={owner}\n            disabled={!balance}\n          />\n          <Query\n            strategy={\"tokensViaEnumBatch\"}\n            contract={contract}\n            owner={owner}\n            disabled={!balance}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Benchmark from \"./Benchmark\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>ERC721 Benchmark</h1>\n          <p>\n            <em>\n              Note: there might be some errors not handled yet, please keep the\n              browser debugging console open.\n            </em>\n          </p>\n          <p>\n            Source code on GitHub:{\" \"}\n            <a href=\"https://www.github.com/vrde/erc721-benchmark\">\n              github.com/vrde/erc721-benchmark\n            </a>\n            .\n          </p>\n          <p>\n            The{\" \"}\n            <a href=\"https://eips.ethereum.org/EIPS/eip-721\">ERC721 standard</a>{\" \"}\n            interface doesn't expose any method to get the list of token ids\n            owned by a user. A method to query the tokens of a user would result\n            would be too expensive to run on chain(\n            <a href=\"https://github.com/OpenZeppelin/openzeppelin-solidity/issues/1064#issuecomment-462837092\">\n              comment 1\n            </a>\n            ,{\" \"}\n            <a href=\"https://github.com/OpenZeppelin/openzeppelin-solidity/pull/856#issuecomment-406723880\">\n              comment 2\n            </a>\n            ), and this would result in a security hole. Instead,{\" \"}\n            <code>tokensOf</code> returns the <strong>total amount</strong> of\n            tokens owned by a user. The standard enforces to emit a{\" \"}\n            <code>\n              Transfer(address indexed _from, address indexed _to, uint256\n              indexed _tokenId)\n            </code>{\" \"}\n            every time a token is transferred. Events can be used to get the\n            list of tokens owned by a user. This approach queries the{\" \"}\n            <code>Transfer</code> events emitted by the smart contract that\n            holds the tokens. As we will see later, quering for events is a slow\n            operation that might fail.\n          </p>\n          <p>\n            ERC721 describes an optional enumeration extension to make the list\n            of tokens fully discoverable. The <a href=\"\">ERC721Enumerable</a>{\" \"}\n            interface defines a new method{\" \"}\n            <code>tokenOfOwnerByIndex(address _owner, uint256 _index)</code>.\n            This combined with <code>balanceOf</code> allow us to iterate over\n            the tokens of a user to get the token ids. This approach is much\n            faster and reliable.\n          </p>\n          <h2>Playground</h2>\n          <p>\n            Try the different fetching strategies yourself. Load a smart\n            contract and test the performance.\n          </p>\n        </header>\n        <Benchmark />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./static/styles/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { loadWeb3 } from \"./utils.js\";\nimport config from \"./config.js\";\n\nloadWeb3().then(web3 => {\n  config.web3 = web3;\n  ReactDOM.render(<App />, document.getElementById(\"root\"));\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}